


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; 
    3 00000000         ; ===========================================
    4 00000000         ; IEEE to TNS Conversion (32 bit, big endian)
    5 00000000         ; ===========================================
    6 00000000         ; :author: Michael Newman
    7 00000000         ; :class: CS2400 Computer Organization 2
    8 00000000         ; :assignment: HW5
    9 00000000         ; :date: 10/4/18
   10 00000000         ;
   11 00000000         ; Designed to convert a IEEE single-persision floating p
                       oint number to TNS
   12 00000000         ; single-persision floating point.
   13 00000000         ;
   14 00000000         ; Builds the TNS number by loading:
   15 00000000         ;   r3 := sign
   16 00000000         ;   r4 := fraction
   17 00000000         ;   r5 := exponent
   18 00000000         ; And then packing the values into r3.
   19 00000000         ; ------------------------------------------------------
                       ----------------------
   20 00000000         
   21 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   22 00000000                 EXPORT           Start
   23 00000000         
   24 00000000 F000 F809 
                       Start   BL               IEEEtoTNS   ; branch to calucla
                                                            te the TNS value
   25 00000004 F000 F824       BL               TNStoIEEE   ; branch to calcula
                                                            te the IEEE value
   26 00000008 A022            ADR              r0, TNS
   27 0000000A 6800            LDR              r0, [r0]
   28 0000000C 4581            CMP              r9, r0      ; check if IEEE to 
                                                            TNS worked
   29 0000000E A020            ADR              r0, IEEE
   30 00000010 6800            LDR              r0, [r0]
   31 00000012 4580            CMP              r8, r0      ; check if the TNS 
                                                            to IEEE worked   
   32 00000014 E7FE            B                .
   33 00000016         
   34 00000016 A01E    IEEEtoTNS
                               ADR              r0, IEEE    ; r0 := address of 
                                                            IEEE
   35 00000018 6801            LDR              r1,[r0]     ; r1 := IEEE word
   36 0000001A         
   37 0000001A F04F 0601 
                       sign    MOV              r6, #0x1    ; sign mask
   38 0000001E EA01 0376       AND              r3, r1, r6, ROR #1 
                                                            ; r3 := TNS sign
   39 00000022         
   40 00000022 A71D    exp     ADR              r7, IEEEexpMask ; r7 := address
                                                             of exponent mask
   41 00000024 683F            LDR              r7, [r7]    ; r7 := exponent ma
                                                            sk
   42 00000026 EA01 0707       AND              r7, r1, r7  ; r7 := unpacked ex
                                                            ponent
   43 0000002A EA4F 57F7       ROR              r7, #23     ; shift exponent to
                                                             TNS location



ARM Macro Assembler    Page 2 


   44 0000002E F1A7 077F       SUB              r7, r7, #127 ; remove bias 127
   45 00000032 F507 7780       ADD              r7, r7, #256 ; add bias 256
   46 00000036 463D            MOV              r5, r7      ; r5 := TNS exponen
                                                            t
   47 00000038         
   48 00000038 A718    fra     ADR              r7, IEEEfracMask ; r7 := adddre
                                                            ss of the fraction 
                                                            mask
   49 0000003A 683F            LDR              r7, [r7]    ; r7 := fraction ma
                                                            sk
   50 0000003C EA07 0701       AND              r7, r7, r1  ; r7 := unpacked ex
                                                            ponent
   51 00000040 EA4F 2407       MOV              r4, r7, LSL #8 ; r4 := TNS frac
                                                            tion
   52 00000044         
   53 00000044 EA43 0304 
                       comb    ORR              r3, r4      ; pack
   54 00000048 EA43 0305       ORR              r3, r5
   55 0000004C 4699            MOV              r9, r3
   56 0000004E 4770            BX               lr
   57 00000050         
   58 00000050         ;--------------------------------TNS TO IEEE------------
                       ----------------------
   59 00000050 A010    TNStoIEEE
                               ADR              r0, TNS
   60 00000052 6800            LDR              r0, [r0]
   61 00000054         
   62 00000054 F04F 0101 
                       sign2   MOV              r1, #0x1
   63 00000058 EA03 0371       AND              r3, r1, ROR #1
   64 0000005C         
   65 0000005C A710    exp2    ADR              r7, TNSexpMask ; address of the
                                                             mask
   66 0000005E 683F            LDR              r7, [r7]    ; actual mask conte
                                                            nt
   67 00000060 EA07 0400       AND              r4, r7, r0  ; extract exponent 
                                                            bits
   68 00000064 F5A4 7480       SUB              r4, #256    ; Remove base 256 b
                                                            ias
   69 00000068 2C7F            CMP              r4, #127    ; test if exponent 
                                                            can be put into IEE
                                                            E form
   70 0000006A DA0F            BGE              error       ; if exponent is to
                                                            o big, branch to er
                                                            ror
   71 0000006C F104 047F       ADD              r4, #127    ; add corret bias
   72 00000070 EA4F 2474       ROR              r4, #9      ; shift exponent bi
                                                            ts to the right loc
                                                            ation
   73 00000074         
   74 00000074 A70B    fra2    ADR              r7, TNSfracMask
   75 00000076 683F            LDR              r7, [r7]
   76 00000078 EA00 0507       AND              r5, r0, r7  ; extract fraction 
                                                            bits
   77 0000007C EA4F 2535       ROR              r5, #8
   78 00000080         
   79 00000080 EA43 0304 
                       comb2   ORR              r3, r4
   80 00000084 EA43 0305       ORR              r3, r5



ARM Macro Assembler    Page 3 


   81 00000088 4698            MOV              r8, r3
   82 0000008A 4770            BX               lr
   83 0000008C         
   84 0000008C         
   85 0000008C         
   86 0000008C         ;---------------------------------HELPER----------------
                       ----------------------
   87 0000008C DF01    error   SWI              1
   88 0000008E E7FE            B                .
   89 00000090         
   90 00000090         ;-----------------------------------DATA----------------
                       ----------------------
   91 00000090 41640000 
                       IEEE    DCD              0x41640000  ; IEEE Representati
                                                            on of 14.25(10)
   92 00000094 64000103 
                       TNS     DCD              0x64000103  ; TNS  Representati
                                                            on of 14.25(10)
   93 00000098 7F800000 
                       IEEEexpMask
                               DCD              0x7F800000  ; mask to get the I
                                                            EEE exponent bits
   94 0000009C 007FFFFE 
                       IEEEfracMask
                               DCD              0x007FFFFE  ; mask to get the I
                                                            EEE fraction bits 
   95 000000A0         ; (w/o least sig)
   96 000000A0 000001FF 
                       TNSexpMask
                               DCD              0x000001FF  ; mask to get the T
                                                            NS exponent bits
   97 000000A4 7FFFFE00 
                       TNSfracMask
                               DCD              0x7FFFFE00  ; mask to get the T
                                                            NS fraction bits
   98 000000A8                 ALIGN
   99 000000A8                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\main.d -o.\main.o -I.\RTE\_SimpleProject -IC:\Keil_v5\ARM\PACK\A
RM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Dev
ice\Include\TM4C123 --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION 
SETA 526" --predefine="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --list=.
\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 21 in file main.s
   Uses
      None
Comment: .text unused
IEEE 00000090

Symbol: IEEE
   Definitions
      At line 91 in file main.s
   Uses
      At line 29 in file main.s
      At line 34 in file main.s

IEEEexpMask 00000098

Symbol: IEEEexpMask
   Definitions
      At line 93 in file main.s
   Uses
      At line 40 in file main.s
Comment: IEEEexpMask used once
IEEEfracMask 0000009C

Symbol: IEEEfracMask
   Definitions
      At line 94 in file main.s
   Uses
      At line 48 in file main.s
Comment: IEEEfracMask used once
IEEEtoTNS 00000016

Symbol: IEEEtoTNS
   Definitions
      At line 34 in file main.s
   Uses
      At line 24 in file main.s
Comment: IEEEtoTNS used once
Start 00000000

Symbol: Start
   Definitions
      At line 24 in file main.s
   Uses
      At line 22 in file main.s
Comment: Start used once
TNS 00000094

Symbol: TNS
   Definitions
      At line 92 in file main.s
   Uses
      At line 26 in file main.s
      At line 59 in file main.s

TNSexpMask 000000A0



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: TNSexpMask
   Definitions
      At line 96 in file main.s
   Uses
      At line 65 in file main.s
Comment: TNSexpMask used once
TNSfracMask 000000A4

Symbol: TNSfracMask
   Definitions
      At line 97 in file main.s
   Uses
      At line 74 in file main.s
Comment: TNSfracMask used once
TNStoIEEE 00000050

Symbol: TNStoIEEE
   Definitions
      At line 59 in file main.s
   Uses
      At line 25 in file main.s
Comment: TNStoIEEE used once
comb 00000044

Symbol: comb
   Definitions
      At line 53 in file main.s
   Uses
      None
Comment: comb unused
comb2 00000080

Symbol: comb2
   Definitions
      At line 79 in file main.s
   Uses
      None
Comment: comb2 unused
error 0000008C

Symbol: error
   Definitions
      At line 87 in file main.s
   Uses
      At line 70 in file main.s
Comment: error used once
exp 00000022

Symbol: exp
   Definitions
      At line 40 in file main.s
   Uses
      None
Comment: exp unused
exp2 0000005C

Symbol: exp2
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 65 in file main.s
   Uses
      None
Comment: exp2 unused
fra 00000038

Symbol: fra
   Definitions
      At line 48 in file main.s
   Uses
      None
Comment: fra unused
fra2 00000074

Symbol: fra2
   Definitions
      At line 74 in file main.s
   Uses
      None
Comment: fra2 unused
sign 0000001A

Symbol: sign
   Definitions
      At line 37 in file main.s
   Uses
      None
Comment: sign unused
sign2 00000054

Symbol: sign2
   Definitions
      At line 62 in file main.s
   Uses
      None
Comment: sign2 unused
19 symbols
353 symbols in table
